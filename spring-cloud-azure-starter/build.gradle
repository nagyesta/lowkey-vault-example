plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.avast.gradle.docker-compose' version '0.17.6'
}

group = 'com.github.nagyesta.lowkeyvault.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudAzureVersion', "5.11.0")
}

dependencies {
	implementation "com.azure.spring:spring-cloud-azure-starter-keyvault-secrets"
	implementation "com.azure.spring:spring-cloud-azure-starter-keyvault"
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

dependencyManagement {
	imports {
		mavenBom "com.azure.spring:spring-cloud-azure-dependencies:${springCloudAzureVersion}"
	}
}

dockerCompose {
	useComposeFiles = ['docker-compose.yml']
	forceRecreate = true
	waitForTcpPorts = true
	retainContainersOnStartupFailure = false
	captureContainersOutput = false

	projectName = 'lowkey-vault-spring-starter'
	dockerComposeWorkingDirectory = project.file("${projectDir}/local")
}

test {
	useJUnitPlatform()
	systemProperty("javax.net.ssl.trustStore", file("$projectDir/local/lowkey-vault/lowkey-vault-keystore.p12"))
	systemProperty("javax.net.ssl.trustStorePassword", "changeit")
	systemProperty("javax.net.ssl.trustStoreType", "PKCS12")
	// Only needed if Assumed Identity and DefaultAzureCredential is used to simulate IMDS managed identity
	environment "IDENTITY_ENDPOINT", "http://localhost:10544/metadata/identity/oauth2/token"
	environment "IDENTITY_HEADER", "header"
	testLogging.showStandardStreams = true
	// make sure the containers are running
	dependsOn tasks.composeUp
	finalizedBy tasks.composeDown
}

bootRun {
	systemProperty("spring.profiles.active", "dev")
	systemProperty("javax.net.ssl.trustStore", file("$projectDir/local/lowkey-vault/lowkey-vault-keystore.p12"))
	systemProperty("javax.net.ssl.trustStorePassword", "changeit")
	systemProperty("javax.net.ssl.trustStoreType", "PKCS12")
	// Only needed if Assumed Identity and DefaultAzureCredential is used to simulate IMDS managed identity
	environment "IDENTITY_ENDPOINT", "http://localhost:10544/metadata/identity/oauth2/token"
	environment "IDENTITY_HEADER", "header"
	// make sure the containers are running
	dependsOn tasks.composeUp
	finalizedBy tasks.composeDown
}
